module Liveness {n} where

-- open import Data.Nat 
-- open import Data.Product
-- open import Function.Base

-- open import AST {n}



-- La idea es que tomo un programa y el active set final. 
-- Tengo que devolver un array de largo = cantidad de asignaciones en el programa. 
-- Capaz que para eso necesito como argumento tambi√©n ese n√∫mero, que sale del AssignmentId.
-- EL valor de cada elemento ser√≠a el LiveOut del statement que corresponda a ese Id.
-- Tengo que hacer una recursi√≥n con una primera funci√≥n que funcione de una manera para el √∫ltimo statement y una distinta para todos los dem√°s.
-- C√≥mo espec√≠ficamente hago eso? No tengo la menor idea. 
-- Despu√©s, tambi√©n necesito saber cu√°les son los GEN y KILL de cada statement. Capaz que puedo encontrar una referencia de esto en internet,
-- o lo voy a tener que pensar y consultarlo con Ceci.
-- Ser√≠a √∫til tambi√©n buscar una implementaci√≥n de Sets porque si no me voy a volver bastante est√∫pido.
livenessAnalysis : ASTStmId ‚Üí ùíú ‚Üí Vec n (...)
